{"version":3,"sources":["objects/enemy.ts"],"names":[],"mappings":"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","file":"objects/enemy.js","sourcesContent":["module objects {\r\n    export class Enemy {\r\n        bodyDef: Box2D.Dynamics.b2BodyDef;\r\n        fixDef: Box2D.Dynamics.b2FixtureDef;\r\n        fixDefShape: Box2D.Collision.Shapes.b2PolygonShape;\r\n        body;\r\n        view: createjs.Sprite;\r\n        width: number;\r\n        height: number;\r\n        constructor() {\r\n            this.view = new createjs.Sprite(managers.Assets.enemyAtlas, \"enemyWalk\");\r\n\r\n            this.width = this.view.getBounds().width / config.SCALE;\r\n            this.height = this.view.getBounds().height / config.SCALE;\r\n            this.view.regX = this.width * 0.5 * config.SCALE;\r\n            this.view.regY = this.height * 0.5 * config.SCALE;\r\n\r\n            this.createFixtureDefinition();\r\n            this.createBodyDefinition();\r\n            this.createEnemy();\r\n\r\n        }\r\n\r\n        createFixtureDefinition() {\r\n            this.fixDef = new box2d.b2FixtureDef();\r\n            this.fixDef.density = 1.0;\r\n            this.fixDef.friction = 0.2; // Add some Resistance\r\n            this.fixDef.restitution = 0.2; // Add a little bounce\r\n\r\n            // Define the shape, which will be a Polygon\r\n            this.fixDefShape = new box2d.b2PolygonShape();\r\n            this.fixDefShape.SetAsBox(this.width * 0.5, this.height * 0.5);\r\n\r\n            this.fixDef.shape = this.fixDefShape;\r\n        }\r\n\r\n        createBodyDefinition() {\r\n            this.bodyDef = new box2d.b2BodyDef();\r\n            this.bodyDef.userData = this.view;\r\n            this.bodyDef.type = box2d.b2Body.b2_dynamicBody;\r\n            this.bodyDef.position.Set(this.view.x / config.SCALE, this.view.y / config.SCALE);\r\n            this.bodyDef.fixedRotation = true; // prevent player rotation\r\n        }\r\n\r\n        createEnemy() {\r\n            // Add Enemy to world\r\n            this.body = world.CreateBody(this.bodyDef)\r\n            this.body.CreateFixture(this.fixDef);\r\n\r\n            // Disallows our Enemy from being disabled\r\n            // or uncontrollable when he is not moving\r\n            this.body.SetSleepingAllowed(false);\r\n\r\n            // A velocity of zero\r\n            this.body.SetLinearVelocity(new box2d.b2Vec2(0, 0));\r\n\r\n            // And no spin\r\n            this.body.SetAngularVelocity(0);\r\n\r\n            // position Enemy\r\n            var randomX = Math.floor(Math.random() * (stage.canvas.width - 30) + 30);\r\n            this.body.SetPosition(new box2d.b2Vec2(randomX / config.SCALE, -this.height / config.SCALE));\r\n        }\r\n\r\n        // Fires on each iteration of our Game Loop\r\n        update() {\r\n            var finalVelocity, impulse, position, velocity;\r\n\r\n            // Get the current position of the Enemy\r\n            position = this.body.GetPosition();\r\n\r\n            velocity = 20;\r\n\r\n            // Move our view (Our EaselJS Bitmap)\r\n            // to the new coordinates to match the\r\n            // Box2D Body's position of the hero\r\n            this.view.x = position.x * config.SCALE;\r\n            this.view.y = position.y * config.SCALE;\r\n\r\n            // Gets the current spinning angle\r\n            this.view.rotation = this.body.GetAngle() * (180 / Math.PI);\r\n\r\n            // Set the final velocity to the current\r\n            // velocity\r\n            finalVelocity = velocity.x;\r\n\r\n           \r\n\r\n            // Set a new vector point for the hero\r\n            // and apply the new linear velocity(left\r\n            // and right) to our Hero's Box2D Body.\r\n            velocity = new box2d.b2Vec2(finalVelocity, velocity.y);\r\n            this.body.SetLinearVelocity(velocity);\r\n        }\r\n    }\r\n} "],"sourceRoot":"/source/"}