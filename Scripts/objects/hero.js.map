{"version":3,"sources":["objects/hero.ts"],"names":[],"mappings":"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","file":"objects/hero.js","sourcesContent":["module objects {\r\n    export class Hero {\r\n        bodyDef: Box2D.Dynamics.b2BodyDef;\r\n        fixDef: Box2D.Dynamics.b2FixtureDef;\r\n        fixDefShape: Box2D.Collision.Shapes.b2CircleShape;\r\n        body;\r\n        view: createjs.Sprite;\r\n        width: number;\r\n        height: number;\r\n        initialX: number;\r\n        initialY: number;\r\n        lastJumpTime: number;\r\n        mirrored: boolean; // Reverse movements\r\n        MAX_SPEED: number = 30;\r\n        JUMP_TIMEOUT: number = 200 // 0.2 second\r\n        JUMP_HEIGHT: number = 70 * config.Screen.SCALE;\r\n        constructor(x: number, y: number, mirrored: boolean) {\r\n            // Sets last jump time to zero, to allow\r\n            // for jumping immediately\r\n            this.lastJumpTime = 0;\r\n\r\n            // Set movement type for hero or enemy\r\n            this.mirrored = mirrored;\r\n            \r\n            // Remember initial position (for scene resets)\r\n            this.initialX = x;\r\n            this.initialY = y;\r\n\r\n            this.view = new createjs.Sprite(managers.Assets.heroAtlas, \"heroIdle\");\r\n\r\n            this.width = this.view.getBounds().width / config.Screen.SCALE;\r\n            this.height = this.view.getBounds().height / config.Screen.SCALE;\r\n\r\n            this.view.regX = this.width * 0.5 * config.Screen.SCALE;\r\n            this.view.regY = this.height * 0.5 * config.Screen.SCALE;\r\n\r\n            this.createFixtureDefinition();\r\n            this.createBodyDefinition();\r\n            this.createHero(x, y);\r\n\r\n            // Set up movement and controls\r\n            this.assignControls()\r\n        }\r\n\r\n        createFixtureDefinition() {\r\n            this.fixDef = new box2d.b2FixtureDef();\r\n            this.fixDef.density = 1.0;\r\n            this.fixDef.friction = 0.01; // Add some Resistance\r\n            this.fixDef.restitution = 0.2; // Add a little bounce\r\n\r\n            // Define the shape, which will be a Polygon\r\n            this.fixDefShape = new box2d.b2CircleShape();\r\n            this.fixDefShape.SetRadius(this.width * 0.5);\r\n            //this.fixDefShape.SetAsBox(this.width * 0.65, this.height * 0.5);\r\n\r\n            this.fixDef.shape = this.fixDefShape;\r\n        }\r\n\r\n        createBodyDefinition() {\r\n            this.bodyDef = new box2d.b2BodyDef();\r\n            this.bodyDef.userData = this.view;\r\n            this.bodyDef.userData.objType = this.mirrored ? 'enemy' : 'hero';\r\n            this.bodyDef.type = box2d.b2Body.b2_dynamicBody;\r\n            this.bodyDef.position.Set(this.view.x / config.Screen.SCALE, this.view.y / config.Screen.SCALE);\r\n            this.bodyDef.fixedRotation = true; // prevent player rotation\r\n        }\r\n\r\n        createHero(x: number, y: number) {\r\n            // Add Hero to world\r\n            this.body = world.CreateBody(this.bodyDef);\r\n            this.body.CreateFixture(this.fixDef);\r\n\r\n            // Disallows our Hero from being disabled\r\n            // or uncontrollable when he is not moving\r\n            this.body.SetSleepingAllowed(false);\r\n\r\n            // A velocity of zero\r\n            this.body.SetLinearVelocity(new box2d.b2Vec2(0, 0));\r\n\r\n            // And no spin\r\n            this.body.SetAngularVelocity(0);\r\n\r\n            // position Hero\r\n            this.body.SetPosition(new box2d.b2Vec2(this.initialX / config.Screen.SCALE, this.initialY / config.Screen.SCALE));\r\n        }\r\n\r\n        assignControls() {\r\n            // Binds key actions\r\n            window.onkeydown = this.onControlDown;\r\n            window.onkeyup = this.onControlUp;\r\n        }\r\n\r\n        onControlDown(e) {\r\n            // Basic switch statement to set\r\n            // our controls to true onKeyDown\r\n            switch (e.which) {\r\n                case keys.LEFT:\r\n                case keys.A:\r\n                    controls.left = true;\r\n                    controls.lTally += 5;\r\n                    controls.rTally = 0;\r\n                    break;\r\n                case keys.RIGHT:\r\n                case keys.D:\r\n                    controls.right = true;\r\n                    controls.rTally += 5;\r\n                    controls.lTally = 0;\r\n                    break;\r\n                case keys.SPACEBAR:\r\n                case keys.W:\r\n                case keys.UP:\r\n                    controls.jumping = true;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        onControlUp(e) {\r\n            // Basic switch statement to set\r\n            // our controls to true onKeyUp\r\n            switch (e.which) {\r\n                case keys.LEFT:\r\n                case keys.A:\r\n                    controls.left = false;\r\n                    break;\r\n                case keys.RIGHT:\r\n                case keys.D:\r\n                    controls.right = false;\r\n                    break;\r\n                case keys.SPACEBAR:\r\n                case keys.W:\r\n                case keys.UP:\r\n                    controls.jumping = false;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        onGround() {\r\n            // If our Hero body is making contact\r\n            // with another body, let him jump\r\n            var contacts;\r\n            contacts = this.body.GetContactList();\r\n            return contacts && contacts.contact.IsTouching();\r\n        }\r\n\r\n        jumpTimePassed() {\r\n            // At least the this.JUMP_TIMEOUT value has\r\n            // passed since the last jump to disable\r\n            // repeatable jumping.\r\n            return createjs.Ticker.getTime() - this.lastJumpTime > this.JUMP_TIMEOUT;\r\n        }\r\n\r\n        // Fires on each iteration of our Game Loop\r\n        update() {\r\n            // Return if game currently paused\r\n            var finalVelocity, impulse, position, velocity, direction;\r\n            /*     if (e.paused) {\r\n                     return;\r\n                 } */\r\n\r\n            // Get the current position of our Hero\r\n            position = this.body.GetPosition();\r\n\r\n            // Get how fast\r\n            velocity = this.body.GetLinearVelocity();\r\n\r\n            // Move our view (Our EaselJS Bitmap)\r\n            // to the new coordinates to match the\r\n            // Box2D Body's position of the hero\r\n            this.view.x = position.x * config.Screen.SCALE;\r\n            this.view.y = position.y * config.Screen.SCALE;\r\n\r\n            // Gets the current spinning angle\r\n            this.view.rotation = this.body.GetAngle() * (180 / Math.PI);\r\n\r\n\r\n            // Jumping\r\n            if (controls.jumping && this.onGround() && this.jumpTimePassed()) {\r\n                // Assign the last jump time to the current\r\n                // time of the running game\r\n                this.lastJumpTime = createjs.Ticker.getTime();\r\n                // Apply an impulse by defining a new vector\r\n                // point with a negative Y value-- jump height\r\n                impulse = new box2d.b2Vec2(0, -this.JUMP_HEIGHT);\r\n                this.body.ApplyImpulse(impulse, position);\r\n                this.view.gotoAndPlay(\"heroJump\");\r\n                createjs.Sound.play(\"jump\");\r\n                controls.lTally = 0;\r\n                controls.rTally = 0;\r\n            }\r\n\r\n            // Get the current (absolute) X-axis velocity\r\n            // and a direction multiplier\r\n            finalVelocity = Math.abs(velocity.x);\r\n            direction = velocity.x >= 0 ? 1 : -1;\r\n\r\n            // Update velocity based on movement\r\n            if (controls.right || controls.left) {\r\n                if (controls.right) direction = 1;\r\n                else direction = -1;\r\n                \r\n                if (this.mirrored) direction *= -1;\r\n                \r\n                // Cap velocity & play animation\r\n                if (finalVelocity < this.MAX_SPEED) {\r\n                    finalVelocity += (finalVelocity > 0 ? 0.45 : 0.6);\r\n\r\n                    this.view.scaleX = direction;\r\n                    // Only Play walk Animation once\r\n                    if (controls.rTally == 5 || controls.lTally == 5) {\r\n                        this.view.gotoAndPlay(\"heroWalk\");\r\n                    }\r\n                }\r\n\r\n            // If no keys are pressed, decelerate the hero naturally\r\n            } else if (finalVelocity > 0.015) {\r\n                finalVelocity *= 0.96; // The lower this is the faster our hero will slow down\r\n\r\n            // Come to a stop\r\n            } else {\r\n                finalVelocity = 0;\r\n                this.view.gotoAndPlay(\"heroIdle\");\r\n            }\r\n\r\n            // Set a new vector point for the hero\r\n            // and apply the new linear velocity(left\r\n            // and right) to our Hero's Box2D Body.\r\n            velocity = new box2d.b2Vec2(finalVelocity * direction, velocity.y);\r\n            this.body.SetLinearVelocity(velocity);\r\n        }\r\n\r\n    }\r\n} "],"sourceRoot":"/source/"}